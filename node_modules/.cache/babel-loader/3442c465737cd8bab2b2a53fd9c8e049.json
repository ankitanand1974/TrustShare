{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\nvar _objectSpread = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar multiaddr = require('multiaddr');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar responseTypes = require('./response-types.js');\nvar createFindPeer = configure.configure(function (api) {\n  function findPeer(_x) {\n    return _findPeer.apply(this, arguments);\n  }\n  function _findPeer() {\n    _findPeer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(peerId) {\n      var options,\n        res,\n        _iteratorAbruptCompletion,\n        _didIteratorError,\n        _iteratorError,\n        _iterator,\n        _step,\n        data,\n        _data$Responses$,\n        ID,\n        Addrs,\n        _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('dht/findpeer', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: peerId\n                }, options)),\n                headers: options.headers\n              });\n            case 3:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(res.ndjson());\n            case 8:\n              _context.next = 10;\n              return _iterator.next();\n            case 10:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 18;\n                break;\n              }\n              data = _step.value;\n              if (!(data.Type === responseTypes.FinalPeer && data.Responses)) {\n                _context.next = 15;\n                break;\n              }\n              _data$Responses$ = data.Responses[0], ID = _data$Responses$.ID, Addrs = _data$Responses$.Addrs;\n              return _context.abrupt(\"return\", {\n                id: ID,\n                addrs: (Addrs || []).map(function (a) {\n                  return new multiaddr.Multiaddr(a);\n                })\n              });\n            case 15:\n              _iteratorAbruptCompletion = false;\n              _context.next = 8;\n              break;\n            case 18:\n              _context.next = 24;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n            case 24:\n              _context.prev = 24;\n              _context.prev = 25;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 29;\n                break;\n              }\n              _context.next = 29;\n              return _iterator.return();\n            case 29:\n              _context.prev = 29;\n              if (!_didIteratorError) {\n                _context.next = 32;\n                break;\n              }\n              throw _iteratorError;\n            case 32:\n              return _context.finish(29);\n            case 33:\n              return _context.finish(24);\n            case 34:\n              throw new Error('not found');\n            case 35:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 20, 24, 34], [25,, 29, 33]]);\n    }));\n    return _findPeer.apply(this, arguments);\n  }\n  return findPeer;\n});\nexports.createFindPeer = createFindPeer;","map":null,"metadata":{},"sourceType":"script"}