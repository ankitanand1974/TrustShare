{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\nvar _objectSpread = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar configure = require('../lib/configure.js');\nvar put = require('../dag/put.js');\nvar createPut = function createPut(codecs, options) {\n  var fn = configure.configure(function (api) {\n    var dagPut = put.createPut(codecs, options);\n    function put$1(_x) {\n      return _put$.apply(this, arguments);\n    }\n    function _put$() {\n      _put$ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(obj) {\n        var options,\n          _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                return _context.abrupt(\"return\", dagPut(obj, _objectSpread({}, options, {\n                  format: 'dag-pb',\n                  hashAlg: 'sha2-256',\n                  version: 0\n                })));\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _put$.apply(this, arguments);\n    }\n    return put$1;\n  });\n  return fn(options);\n};\nexports.createPut = createPut;","map":null,"metadata":{},"sourceType":"script"}