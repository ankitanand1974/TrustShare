{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\nvar _objectSpread = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _awaitAsyncGenerator = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/awaitAsyncGenerator\");\nvar _wrapAsyncGenerator = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapAsyncGenerator\");\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar multiaddr = require('multiaddr');\nvar objectToCamel = require('../lib/object-to-camel.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar abortSignal = require('../lib/abort-signal.js');\nvar nativeAbortController = require('native-abort-controller');\nvar toString = require('uint8arrays/to-string');\nvar createPut = configure.configure(function (api) {\n  function put(_x, _x2) {\n    return _put.apply(this, arguments);\n  }\n  function _put() {\n    _put = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key, value) {\n      var options,\n        controller,\n        signal,\n        res,\n        _iteratorAbruptCompletion,\n        _didIteratorError,\n        _iteratorError,\n        _iterator,\n        _step,\n        message,\n        _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              controller = new nativeAbortController.AbortController();\n              signal = abortSignal.abortSignal(controller.signal, options.signal);\n              _context.t0 = _awaitAsyncGenerator;\n              _context.t1 = api;\n              _context.t2 = _objectSpread;\n              _context.t3 = {\n                signal: signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: toString.toString(key)\n                }, options))\n              };\n              _context.next = 9;\n              return _awaitAsyncGenerator(multipartRequest.multipartRequest(value, controller, options.headers));\n            case 9:\n              _context.t4 = _context.sent;\n              _context.t5 = (0, _context.t2)(_context.t3, _context.t4);\n              _context.t6 = _context.t1.post.call(_context.t1, 'dht/put', _context.t5);\n              _context.next = 14;\n              return (0, _context.t0)(_context.t6);\n            case 14:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 17;\n              _iterator = _asyncIterator(res.ndjson());\n            case 19:\n              _context.next = 21;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 21:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 30;\n                break;\n              }\n              message = _step.value;\n              message = objectToCamel.objectToCamel(message);\n              if (message.responses) {\n                message.responses = message.responses.map(function (_ref) {\n                  var ID = _ref.ID,\n                    Addrs = _ref.Addrs;\n                  return {\n                    id: ID,\n                    addrs: (Addrs || []).map(function (a) {\n                      return new multiaddr.Multiaddr(a);\n                    })\n                  };\n                });\n              }\n              _context.next = 27;\n              return message;\n            case 27:\n              _iteratorAbruptCompletion = false;\n              _context.next = 19;\n              break;\n            case 30:\n              _context.next = 36;\n              break;\n            case 32:\n              _context.prev = 32;\n              _context.t7 = _context[\"catch\"](17);\n              _didIteratorError = true;\n              _iteratorError = _context.t7;\n            case 36:\n              _context.prev = 36;\n              _context.prev = 37;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 41;\n                break;\n              }\n              _context.next = 41;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 41:\n              _context.prev = 41;\n              if (!_didIteratorError) {\n                _context.next = 44;\n                break;\n              }\n              throw _iteratorError;\n            case 44:\n              return _context.finish(41);\n            case 45:\n              return _context.finish(36);\n            case 46:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[17, 32, 36, 46], [37,, 41, 45]]);\n    }));\n    return _put.apply(this, arguments);\n  }\n  return put;\n});\nexports.createPut = createPut;","map":null,"metadata":{},"sourceType":"script"}