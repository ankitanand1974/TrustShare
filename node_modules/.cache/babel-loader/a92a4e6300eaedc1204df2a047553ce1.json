{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar configure = require('../lib/configure.js');\nvar resolve = require('../lib/resolve.js');\nvar first = require('it-first');\nvar last = require('it-last');\nvar errCode = require('err-code');\nvar get = require('../block/get.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar first__default = /*#__PURE__*/_interopDefaultLegacy(first);\nvar last__default = /*#__PURE__*/_interopDefaultLegacy(last);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar createGet = function createGet(codecs, options) {\n  var fn = configure.configure(function (api, opts) {\n    var getBlock = get.createGet(opts);\n    var get$1 = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid) {\n        var options,\n          entry,\n          result,\n          codec,\n          block,\n          node,\n          _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                if (!options.path) {\n                  _context.next = 16;\n                  break;\n                }\n                if (!options.localResolve) {\n                  _context.next = 8;\n                  break;\n                }\n                _context.next = 5;\n                return first__default['default'](resolve.resolve(cid, options.path, codecs, getBlock, options));\n              case 5:\n                _context.t0 = _context.sent;\n                _context.next = 11;\n                break;\n              case 8:\n                _context.next = 10;\n                return last__default['default'](resolve.resolve(cid, options.path, codecs, getBlock, options));\n              case 10:\n                _context.t0 = _context.sent;\n              case 11:\n                entry = _context.t0;\n                result = entry;\n                if (result) {\n                  _context.next = 15;\n                  break;\n                }\n                throw errCode__default['default'](new Error('Not found'), 'ERR_NOT_FOUND');\n              case 15:\n                return _context.abrupt(\"return\", result);\n              case 16:\n                _context.next = 18;\n                return codecs.getCodec(cid.code);\n              case 18:\n                codec = _context.sent;\n                _context.next = 21;\n                return getBlock(cid, options);\n              case 21:\n                block = _context.sent;\n                node = codec.decode(block);\n                return _context.abrupt(\"return\", {\n                  value: node,\n                  remainderPath: ''\n                });\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function get$1(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return get$1;\n  });\n  return fn(options);\n};\nexports.createGet = createGet;","map":null,"metadata":{},"sourceType":"script"}