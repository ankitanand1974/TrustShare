{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\nvar _objectSpread = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _wrapAsyncGenerator = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapAsyncGenerator\");\nvar _awaitAsyncGenerator = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/awaitAsyncGenerator\");\nvar _asyncGeneratorDelegate = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncGeneratorDelegate\");\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar createRmAll = configure.configure(function (api) {\n  function rmAll(_x) {\n    return _rmAll.apply(this, arguments);\n  }\n  function _rmAll() {\n    _rmAll = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n      var options,\n        _iteratorAbruptCompletion,\n        _didIteratorError,\n        _iteratorError,\n        _iterator,\n        _step,\n        _step$value,\n        path,\n        recursive,\n        searchParams,\n        res,\n        _iteratorAbruptCompletion2,\n        _didIteratorError2,\n        _iteratorError2,\n        _iterator2,\n        _step2,\n        pin,\n        _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 3;\n              _iterator = _asyncIterator(normaliseInput.normaliseInput(source));\n            case 5:\n              _context.next = 7;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 7:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 50;\n                break;\n              }\n              _step$value = _step.value, path = _step$value.path, recursive = _step$value.recursive;\n              searchParams = new URLSearchParams(options.searchParams);\n              searchParams.append('arg', \"\".concat(path));\n              if (recursive != null) searchParams.set('recursive', String(recursive));\n              _context.next = 14;\n              return _awaitAsyncGenerator(api.post('pin/rm', {\n                signal: options.signal,\n                headers: options.headers,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({}, options, {\n                  arg: \"\".concat(path),\n                  recursive: recursive\n                }))\n              }));\n            case 14:\n              res = _context.sent;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context.prev = 17;\n              _iterator2 = _asyncIterator(res.ndjson());\n            case 19:\n              _context.next = 21;\n              return _awaitAsyncGenerator(_iterator2.next());\n            case 21:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context.sent).done)) {\n                _context.next = 31;\n                break;\n              }\n              pin = _step2.value;\n              if (!pin.Pins) {\n                _context.next = 26;\n                break;\n              }\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(pin.Pins.map(function (cid$1) {\n                return cid.CID.parse(cid$1);\n              })), _awaitAsyncGenerator), \"t0\", 25);\n            case 25:\n              return _context.abrupt(\"continue\", 28);\n            case 26:\n              _context.next = 28;\n              return cid.CID.parse(pin);\n            case 28:\n              _iteratorAbruptCompletion2 = false;\n              _context.next = 19;\n              break;\n            case 31:\n              _context.next = 37;\n              break;\n            case 33:\n              _context.prev = 33;\n              _context.t1 = _context[\"catch\"](17);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n            case 37:\n              _context.prev = 37;\n              _context.prev = 38;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context.next = 42;\n                break;\n              }\n              _context.next = 42;\n              return _awaitAsyncGenerator(_iterator2.return());\n            case 42:\n              _context.prev = 42;\n              if (!_didIteratorError2) {\n                _context.next = 45;\n                break;\n              }\n              throw _iteratorError2;\n            case 45:\n              return _context.finish(42);\n            case 46:\n              return _context.finish(37);\n            case 47:\n              _iteratorAbruptCompletion = false;\n              _context.next = 5;\n              break;\n            case 50:\n              _context.next = 56;\n              break;\n            case 52:\n              _context.prev = 52;\n              _context.t2 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t2;\n            case 56:\n              _context.prev = 56;\n              _context.prev = 57;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 61;\n                break;\n              }\n              _context.next = 61;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 61:\n              _context.prev = 61;\n              if (!_didIteratorError) {\n                _context.next = 64;\n                break;\n              }\n              throw _iteratorError;\n            case 64:\n              return _context.finish(61);\n            case 65:\n              return _context.finish(56);\n            case 66:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 52, 56, 66], [17, 33, 37, 47], [38,, 42, 46], [57,, 61, 65]]);\n    }));\n    return _rmAll.apply(this, arguments);\n  }\n  return rmAll;\n});\nexports.createRmAll = createRmAll;","map":null,"metadata":{},"sourceType":"script"}