{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/thomasjose/Desktop/TrustShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/thomasjose/Desktop/TrustShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar nativeAbortController = require('native-abort-controller');\nvar SubscriptionTracker = /*#__PURE__*/function () {\n  function SubscriptionTracker() {\n    _classCallCheck(this, SubscriptionTracker);\n    this._subs = new Map();\n  }\n  _createClass(SubscriptionTracker, [{\n    key: \"subscribe\",\n    value: function subscribe(topic, handler, signal) {\n      var _this = this;\n      var topicSubs = this._subs.get(topic) || [];\n      if (topicSubs.find(function (s) {\n        return s.handler === handler;\n      })) {\n        throw new Error(\"Already subscribed to \".concat(topic, \" with this handler\"));\n      }\n      var controller = new nativeAbortController.AbortController();\n      this._subs.set(topic, [{\n        handler: handler,\n        controller: controller\n      }].concat(topicSubs));\n      if (signal) {\n        signal.addEventListener('abort', function () {\n          return _this.unsubscribe(topic, handler);\n        });\n      }\n      return controller.signal;\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(topic, handler) {\n      var subs = this._subs.get(topic) || [];\n      var unsubs;\n      if (handler) {\n        this._subs.set(topic, subs.filter(function (s) {\n          return s.handler !== handler;\n        }));\n        unsubs = subs.filter(function (s) {\n          return s.handler === handler;\n        });\n      } else {\n        this._subs.set(topic, []);\n        unsubs = subs;\n      }\n      if (!(this._subs.get(topic) || []).length) {\n        this._subs.delete(topic);\n      }\n      unsubs.forEach(function (s) {\n        return s.controller.abort();\n      });\n    }\n  }]);\n  return SubscriptionTracker;\n}();\nexports.SubscriptionTracker = SubscriptionTracker;","map":null,"metadata":{},"sourceType":"script"}