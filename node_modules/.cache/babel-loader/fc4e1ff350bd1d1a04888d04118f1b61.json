{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\nvar _awaitAsyncGenerator = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/awaitAsyncGenerator\");\nvar _wrapAsyncGenerator = require(\"C:\\\\Users\\\\Ankit Anand\\\\Desktop\\\\New folder (2)\\\\Our_Storage_Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapAsyncGenerator\");\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar abortSignal = require('../lib/abort-signal.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar nativeAbortController = require('native-abort-controller');\nvar cid = require('multiformats/cid');\nvar createImport = configure.configure(function (api) {\n  function dagImport(_x) {\n    return _dagImport.apply(this, arguments);\n  }\n  function _dagImport() {\n    _dagImport = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n      var options,\n        controller,\n        signal,\n        _yield$_awaitAsyncGen,\n        headers,\n        body,\n        res,\n        _iteratorAbruptCompletion,\n        _didIteratorError,\n        _iteratorError,\n        _iterator,\n        _step,\n        Root,\n        Cid,\n        PinErrorMsg,\n        _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              controller = new nativeAbortController.AbortController();\n              signal = abortSignal.abortSignal(controller.signal, options.signal);\n              _context.next = 5;\n              return _awaitAsyncGenerator(multipartRequest.multipartRequest(source, controller, options.headers));\n            case 5:\n              _yield$_awaitAsyncGen = _context.sent;\n              headers = _yield$_awaitAsyncGen.headers;\n              body = _yield$_awaitAsyncGen.body;\n              _context.next = 10;\n              return _awaitAsyncGenerator(api.post('dag/import', {\n                signal: signal,\n                headers: headers,\n                body: body,\n                searchParams: toUrlSearchParams.toUrlSearchParams({\n                  'pin-roots': options.pinRoots\n                })\n              }));\n            case 10:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 13;\n              _iterator = _asyncIterator(res.ndjson());\n            case 15:\n              _context.next = 17;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 17:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 26;\n                break;\n              }\n              Root = _step.value.Root;\n              if (!(Root !== undefined)) {\n                _context.next = 23;\n                break;\n              }\n              Cid = Root.Cid['/'], PinErrorMsg = Root.PinErrorMsg;\n              _context.next = 23;\n              return {\n                root: {\n                  cid: cid.CID.parse(Cid),\n                  pinErrorMsg: PinErrorMsg\n                }\n              };\n            case 23:\n              _iteratorAbruptCompletion = false;\n              _context.next = 15;\n              break;\n            case 26:\n              _context.next = 32;\n              break;\n            case 28:\n              _context.prev = 28;\n              _context.t0 = _context[\"catch\"](13);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n            case 32:\n              _context.prev = 32;\n              _context.prev = 33;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 37;\n                break;\n              }\n              _context.next = 37;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 37:\n              _context.prev = 37;\n              if (!_didIteratorError) {\n                _context.next = 40;\n                break;\n              }\n              throw _iteratorError;\n            case 40:\n              return _context.finish(37);\n            case 41:\n              return _context.finish(32);\n            case 42:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[13, 28, 32, 42], [33,, 37, 41]]);\n    }));\n    return _dagImport.apply(this, arguments);\n  }\n  return dagImport;\n});\nexports.createImport = createImport;","map":null,"metadata":{},"sourceType":"script"}