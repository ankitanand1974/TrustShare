{"ast":null,"code":"import _toConsumableArray from \"/Users/thomasjose/Desktop/TrustShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/thomasjose/Desktop/TrustShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/thomasjose/Desktop/TrustShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/thomasjose/Desktop/TrustShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thomasjose/Desktop/TrustShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/thomasjose/Desktop/TrustShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/thomasjose/Desktop/TrustShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/thomasjose/Desktop/TrustShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/thomasjose/Desktop/TrustShare/src/App.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport OurStorageDapp from \"./abis/OurStorageDapp.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"./components/App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Main from \"./components/Main\";\nimport UploadFile from \"./components/UploadFile\";\nimport NotConnected from \"./components/NotConnected\";\nimport { ethers } from \"ethers\";\nvar _ipfsClient = require(\"ipfs-http-client\");\n// const ipfs = ipfsClient.create({\n//   host: \"ipfs.infura.io\",\n//   port: 5001,\n//   protocol: \"https\",\n//});\nvar projectId = \"2O90tZzocnBNd2ZdCSTHQV7m8TE\";\nvar projectSecret = \"403dc5b56b8383268dc24ae961e57771\";\nvar auth = \"Basic \" + Buffer.from(projectId + \":\" + projectSecret).toString(\"base64\");\nvar ipfsClient = function ipfsClient() {\n  var ipfs = (0, _ipfsClient.create)({\n    host: \"ipfs.infura.io\",\n    port: 5001,\n    protocol: \"https\",\n    headers: {\n      authorization: auth\n    }\n  });\n  return ipfs;\n};\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.loadWeb3();\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum);\n                this.loadBlockchainData();\n              } else {\n                this.setState({\n                  connected: false\n                });\n              }\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var web3, accounts, account, networkId, ourStorageData, ourStorageDapp;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              web3 = new Web3(window.ethereum);\n              _context3.next = 3;\n              return window.ethereum.request({\n                method: \"eth_requestAccounts\"\n              });\n            case 3:\n              accounts = _context3.sent;\n              account = accounts[0];\n              web3.eth.defaultAccount = accounts[0];\n              this.setState({\n                account: accounts[0]\n              });\n              _context3.next = 9;\n              return web3.eth.net.getId();\n            case 9:\n              networkId = _context3.sent;\n              ourStorageData = OurStorageDapp.networks[networkId];\n              console.log(ourStorageData);\n              if (!ourStorageData) {\n                _context3.next = 20;\n                break;\n              }\n              ourStorageDapp = web3.eth.Contract(OurStorageDapp.abi, \"0x4578574Eab2b98c1Be2c3638B31F766A0c10AD06\");\n              this.setState({\n                ourStorageDapp: ourStorageDapp\n              });\n              _context3.next = 17;\n              return this.loadMyAllFiles();\n            case 17:\n              this.setState({\n                loading: false\n              });\n              _context3.next = 21;\n              break;\n            case 20:\n              this.setState({\n                connected: false\n              });\n            case 21:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadMyAllFiles\",\n    value: function () {\n      var _loadMyAllFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var totalFilesCount, i, file;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              this.setState({\n                allFiles: []\n              });\n              _context4.next = 3;\n              return this.state.ourStorageDapp.methods.getTotalFileCount().call();\n            case 3:\n              totalFilesCount = _context4.sent;\n              i = totalFilesCount;\n            case 5:\n              if (!(i >= 1)) {\n                _context4.next = 13;\n                break;\n              }\n              _context4.next = 8;\n              return this.state.ourStorageDapp.methods.getFileOf(i).call();\n            case 8:\n              file = _context4.sent;\n              if (file.fileName != \"0deleted_\") {\n                this.setState({\n                  allFiles: [].concat(_toConsumableArray(this.state.allFiles), [file])\n                });\n              }\n            case 10:\n              i--;\n              _context4.next = 5;\n              break;\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function loadMyAllFiles() {\n        return _loadMyAllFiles.apply(this, arguments);\n      }\n      return loadMyAllFiles;\n    }()\n  }, {\n    key: \"deleteFile\",\n    value: function () {\n      var _deleteFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(_id) {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              this.setState({\n                loading: true\n              });\n              this.state.ourStorageDapp.methods.deleteFile(_id).send({\n                from: this.state.account\n              }).on(\"transactionHash\", function (hash) {\n                console.log(\"transactionHash\", hash);\n              }).on(\"receipt\", function (receipt) {}).on(\"confirmation\", /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(confirmationNumber, receipt) {\n                  return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                    while (1) switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.next = 2;\n                        return _this2.loadMyAllFiles();\n                      case 2:\n                        _this2.setState({\n                          loading: false\n                        });\n                      case 3:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }, _callee5);\n                }));\n                return function (_x2, _x3) {\n                  return _ref.apply(this, arguments);\n                };\n              }()).on(\"error\", function (error, receipt) {\n                console.log(\"error\", error);\n                console.log(\"receipt\", receipt);\n              });\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function deleteFile(_x) {\n        return _deleteFile.apply(this, arguments);\n      }\n      return deleteFile;\n    }()\n  }, {\n    key: \"captureFile\",\n    value: function () {\n      var _captureFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(event) {\n        var _this3 = this;\n        var file, reader;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              event.preventDefault();\n              file = event.target.files[0];\n              reader = new window.FileReader();\n              reader.readAsArrayBuffer(file);\n              reader.onloadend = function () {\n                _this3.setState({\n                  buffer: Buffer(reader.result),\n                  fileType: file.type\n                });\n                _this3.setValues(file.name, _this3.convertBytes(file.size));\n              };\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      function captureFile(_x4) {\n        return _captureFile.apply(this, arguments);\n      }\n      return captureFile;\n    }()\n  }, {\n    key: \"setValues\",\n    value: function () {\n      var _setValues = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(_name, _size) {\n        var fileNameBox, fileTypeBox, fileSizeBox;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              fileNameBox = document.getElementById(\"fileNameBox\");\n              fileTypeBox = document.getElementById(\"fileTypeBox\");\n              fileSizeBox = document.getElementById(\"fileSizeBox\");\n              fileNameBox.value = _name;\n              fileTypeBox.value = this.state.fileType;\n              fileSizeBox.value = _size;\n              this.setState({\n                showFileDetails: true\n              });\n            case 7:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function setValues(_x5, _x6) {\n        return _setValues.apply(this, arguments);\n      }\n      return setValues;\n    }()\n  }, {\n    key: \"uploadFile\",\n    value: function () {\n      var _uploadFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(_name, _des) {\n        var web3, _window, ethereum, networkId, ourStorageData, ipfs, result, provider, signer, contract, txn;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              this.setState({\n                loading: true\n              });\n              web3 = new Web3(window.ethereum);\n              _window = window, ethereum = _window.ethereum;\n              if (!ethereum) {\n                _context9.next = 24;\n                break;\n              }\n              _context9.next = 7;\n              return web3.eth.net.getId();\n            case 7:\n              networkId = _context9.sent;\n              ourStorageData = OurStorageDapp.networks[networkId];\n              ipfs = ipfsClient();\n              _context9.next = 12;\n              return ipfs.add(this.state.buffer);\n            case 12:\n              result = _context9.sent;\n              provider = new ethers.providers.Web3Provider(ethereum);\n              signer = provider.getSigner();\n              contract = new ethers.Contract(\"0x4578574Eab2b98c1Be2c3638B31F766A0c10AD06\", OurStorageDapp.abi, signer);\n              _context9.next = 18;\n              return contract.uploadFile(result.path, result.size, this.state.fileType, _name, _des);\n            case 18:\n              txn = _context9.sent;\n              console.log(\"please wait\");\n              _context9.next = 22;\n              return txn.wait();\n            case 22:\n              _context9.next = 25;\n              break;\n            case 24:\n              console.log(\"ethereum not found\");\n            case 25:\n              _context9.next = 30;\n              break;\n            case 27:\n              _context9.prev = 27;\n              _context9.t0 = _context9[\"catch\"](0);\n              console.log(_context9.t0);\n            case 30:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[0, 27]]);\n      }));\n      function uploadFile(_x7, _x8) {\n        return _uploadFile.apply(this, arguments);\n      }\n      return uploadFile;\n    }()\n  }, {\n    key: \"convertBytes\",\n    value: function convertBytes(bytes) {\n      var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n      if (bytes === 0) return \"0 Byte\";\n      var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n      return Math.round(bytes / Math.pow(1024, i), 2) + \" \" + sizes[i];\n    }\n  }]);\n  function App(props) {\n    var _this;\n    _classCallCheck(this, App);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: \"\",\n      ourStorageDapp: null,\n      postCount: 0,\n      allFiles: [],\n      buffer: \"\",\n      fileType: \"\",\n      showFileDetails: false,\n      loading: true,\n      connected: true\n    };\n    _this.uploadFile = _this.uploadFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteFile = _this.deleteFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return (\n        /*#__PURE__*/\n        // <Router>\n        React.createElement(HashRouter, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 9\n          }\n        }, this.state.connected ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n          account: this.state.account,\n          userProfile: this.state.userProfile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }\n        }), this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"text-center m-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"spinner-border bg-light m-auto\",\n          role: \"status\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 19\n          }\n        })) : /*#__PURE__*/React.createElement(Switch, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Route, {\n          path: \"/\",\n          exact: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Main, {\n          account: this.state.account,\n          allFiles: this.state.allFiles,\n          deleteFile: this.deleteFile,\n          showDeletedFiles: this.state.showDeletedFiles,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(Route, {\n          path: \"/uploadfiles\",\n          exact: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(UploadFile, {\n          account: this.state.account,\n          uploadFile: this.uploadFile,\n          captureFile: this.captureFile,\n          showFileDetails: this.state.showFileDetails,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 21\n          }\n        })))) : /*#__PURE__*/React.createElement(NotConnected, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }\n        }))) //for github pages\n      );\n    }\n  }]);\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","React","Component","BrowserRouter","Router","Switch","Route","HashRouter","Web3","OurStorageDapp","Navbar","Main","UploadFile","NotConnected","ethers","_ipfsClient","require","projectId","projectSecret","auth","Buffer","from","toString","ipfsClient","ipfs","host","port","protocol","headers","authorization","App","_Component","_inherits","_createClass","_componentWillMount","_asyncToGenerator","_callee","_callee$","_context","loadWeb3","componentWillMount","apply","arguments","_loadWeb","_callee2","_callee2$","_context2","window","ethereum","web3","loadBlockchainData","setState","connected","_loadBlockchainData","_callee3","accounts","account","networkId","ourStorageData","ourStorageDapp","_callee3$","_context3","request","eth","defaultAccount","net","getId","networks","console","log","Contract","abi","loadMyAllFiles","loading","_loadMyAllFiles","_callee4","totalFilesCount","file","_callee4$","_context4","allFiles","methods","getTotalFileCount","getFileOf","fileName","concat","_toConsumableArray","_deleteFile","_callee6","_id","_this2","_callee6$","_context6","deleteFile","send","on","hash","receipt","_ref","_callee5","confirmationNumber","_callee5$","_context5","_x2","_x3","_x","_captureFile","_callee7","event","_this3","reader","_callee7$","_context7","preventDefault","target","files","FileReader","readAsArrayBuffer","onloadend","buffer","fileType","setValues","convertBytes","size","captureFile","_x4","_setValues","_callee8","_name","_size","fileNameBox","fileTypeBox","fileSizeBox","_callee8$","_context8","document","getElementById","showFileDetails","_x5","_x6","_uploadFile","_callee9","_des","_window","provider","signer","contract","txn","_callee9$","_context9","add","providers","Web3Provider","getSigner","uploadFile","path","wait","t0","_x7","_x8","bytes","sizes","parseInt","Math","floor","round","pow","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","postCount","bind","_assertThisInitialized","render","createElement","__self","__source","_jsxFileName","lineNumber","columnNumber","className","Fragment","userProfile","role","exact","showDeletedFiles"],"sources":["/Users/thomasjose/Desktop/TrustShare/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter,\n} from \"react-router-dom\";\n\nimport Web3 from \"web3\";\nimport OurStorageDapp from \"./abis/OurStorageDapp.json\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nimport \"./components/App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Main from \"./components/Main\";\nimport UploadFile from \"./components/UploadFile\";\nimport NotConnected from \"./components/NotConnected\";\nimport { ethers } from \"ethers\";\n\nconst _ipfsClient = require(\"ipfs-http-client\");\n// const ipfs = ipfsClient.create({\n//   host: \"ipfs.infura.io\",\n//   port: 5001,\n//   protocol: \"https\",\n//});\nconst projectId = \"2O90tZzocnBNd2ZdCSTHQV7m8TE\";\nconst projectSecret = \"403dc5b56b8383268dc24ae961e57771\";\nconst auth =\n  \"Basic \" + Buffer.from(projectId + \":\" + projectSecret).toString(\"base64\");\n\nconst ipfsClient = () => {\n  const ipfs = (0, _ipfsClient.create)({\n    host: \"ipfs.infura.io\",\n    port: 5001,\n    protocol: \"https\",\n    headers: {\n      authorization: auth,\n    },\n  });\n  return ipfs;\n};\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n  }\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n\n      this.loadBlockchainData();\n    } else {\n      this.setState({ connected: false });\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(window.ethereum);\n\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    const account = accounts[0];\n    web3.eth.defaultAccount = accounts[0];\n    this.setState({ account: accounts[0] });\n\n    const networkId = await web3.eth.net.getId();\n    const ourStorageData = OurStorageDapp.networks[networkId];\n    console.log(ourStorageData)\n\n    if (ourStorageData) {\n      const ourStorageDapp = web3.eth.Contract(\n        OurStorageDapp.abi,\n        \"0x4578574Eab2b98c1Be2c3638B31F766A0c10AD06\"\n      );\n      this.setState({ ourStorageDapp });\n      await this.loadMyAllFiles();\n      this.setState({ loading: false });\n    } else {\n      this.setState({ connected: false });\n    }\n  }\n\n  async loadMyAllFiles() {\n    this.setState({\n      allFiles: [],\n    });\n    const totalFilesCount = await this.state.ourStorageDapp.methods\n      .getTotalFileCount()\n      .call();\n\n    for (let i = totalFilesCount; i >= 1; i--) {\n      let file = await this.state.ourStorageDapp.methods.getFileOf(i).call();\n      if (file.fileName != \"0deleted_\") {\n        this.setState({\n          allFiles: [...this.state.allFiles, file],\n        });\n      }\n    }\n  }\n\n  async deleteFile(_id) {\n    this.setState({\n      loading: true,\n    });\n    this.state.ourStorageDapp.methods\n      .deleteFile(_id)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        console.log(\"transactionHash\", hash);\n      })\n      .on(\"receipt\", (receipt) => {})\n      .on(\"confirmation\", async (confirmationNumber, receipt) => {\n        await this.loadMyAllFiles();\n        this.setState({\n          loading: false,\n        });\n      })\n      .on(\"error\", (error, receipt) => {\n        console.log(\"error\", error);\n        console.log(\"receipt\", receipt);\n      });\n  }\n\n  async captureFile(event) {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      this.setState({\n        buffer: Buffer(reader.result),\n        fileType: file.type,\n      });\n      this.setValues(file.name, this.convertBytes(file.size));\n    };\n  }\n  async setValues(_name, _size) {\n    const fileNameBox = document.getElementById(\"fileNameBox\");\n    const fileTypeBox = document.getElementById(\"fileTypeBox\");\n    const fileSizeBox = document.getElementById(\"fileSizeBox\");\n\n    fileNameBox.value = _name;\n    fileTypeBox.value = this.state.fileType;\n    fileSizeBox.value = _size;\n    this.setState({ showFileDetails: true });\n  }\n\n  async uploadFile(_name, _des) {\n    try {\n      this.setState({ loading: true });\n      const web3 = new Web3(window.ethereum);\n      const {ethereum} = window\n      if(ethereum){\n        const networkId = await web3.eth.net.getId();\n        const ourStorageData = OurStorageDapp.networks[networkId];\n        const ipfs = ipfsClient();\n        let result = await ipfs.add(this.state.buffer)\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(\"0x4578574Eab2b98c1Be2c3638B31F766A0c10AD06\", OurStorageDapp.abi, signer);\n        let txn = await contract.uploadFile(\n          result.path,\n          result.size,\n          this.state.fileType,\n          _name,\n          _des\n        )\n        \n        console.log(\"please wait\")\n        await txn.wait();\n        \n      }\n      else{\n        console.log(\"ethereum not found\")\n      }\n      \n    } catch(err){\n      console.log(err)\n    }\n    // const provider = new ethers.providers.Web3Provider(window.ethereum)\n    // await provider.send(\"eth_requestAccounts\", []);\n    // this.setState({ loading: true });\n    // const signer = provider.getSigner()\n    // // Add file to the IPFS\n    // const ipfs = ipfsClient();\n\n    // ipfs\n    //   .add(this.state.buffer)\n    //   .then((result) => {\n    //     console.log(result, \"hello\");\n    //     console.log(this.state.ourStorageDapp)\n    //     this.state.ourStorageDapp.methods\n    //       .uploadFile(\n      //       result.path,\n      //       result.size,\n      //       this.state.fileType,\n      //       _name,\n      //       _des\n      //     )\n      //     .send({ from: this.state.account })\n      //     .on(\"transactionHash\", (hash) => {\n      //       console.log(\"transactionHash\", hash);\n      //     })\n      //     .on(\"receipt\", (receipt) => {})\n      //     .on(\"confirmation\", async (confirmationNumber, receipt) => {\n      //       await this.loadMyAllFiles();\n      //       this.setState({\n      //         loading: false,\n      //         buffer: \"\",\n      //         showFileDetails: false,\n      //       });\n      //     })\n      //     .on(\"error\", (error, receipt) => {\n      //       console.log(\"error\", error);\n      //       console.log(\"receipt\", receipt);\n      //     });\n      // })\n      // .catch((error) => console.error(error));\n  }\n\n  convertBytes(bytes) {\n    var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    if (bytes === 0) return \"0 Byte\";\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + \" \" + sizes[i];\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      ourStorageDapp: null,\n      postCount: 0,\n      allFiles: [],\n      buffer: \"\",\n      fileType: \"\",\n      showFileDetails: false,\n      loading: true,\n      connected: true,\n    };\n    this.uploadFile = this.uploadFile.bind(this);\n    this.captureFile = this.captureFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n  }\n\n  render() {\n    return (\n      // <Router>\n\n      <HashRouter>\n        <div className=\"\">\n          {this.state.connected ? (\n            <>\n              <Navbar\n                account={this.state.account}\n                userProfile={this.state.userProfile}\n              />\n              {this.state.loading ? (\n                <div className=\"text-center m-5\">\n                  <div\n                    className=\"spinner-border bg-light m-auto\"\n                    role=\"status\"\n                  ></div>\n                </div>\n              ) : (\n                <Switch>\n                  <Route path=\"/\" exact>\n                    <Main\n                      account={this.state.account}\n                      allFiles={this.state.allFiles}\n                      deleteFile={this.deleteFile}\n                      showDeletedFiles={this.state.showDeletedFiles}\n                    />\n                  </Route>\n\n                  <Route path=\"/uploadfiles\" exact>\n                    <UploadFile\n                      account={this.state.account}\n                      uploadFile={this.uploadFile}\n                      captureFile={this.captureFile}\n                      showFileDetails={this.state.showFileDetails}\n                    />\n                  </Route>\n                </Switch>\n              )}\n            </>\n          ) : (\n            <NotConnected />\n          )}\n        </div>\n\n        {/* </Router> */}\n      </HashRouter> //for github pages\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}